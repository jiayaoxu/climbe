<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.newcode.climb.mapper.Club_memberMapper" >
  <resultMap id="BaseResultMap" type="cn.newcode.climb.po.Club_member" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="cid" property="cid" jdbcType="INTEGER" />
    <result column="member" property="member" jdbcType="INTEGER" />
    <result column="position" property="position" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, cid, member, position
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from club_member
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from club_member
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.newcode.climb.po.Club_member" >
    insert into club_member (id, cid, member, 
      position)
    values (#{id,jdbcType=INTEGER}, #{cid,jdbcType=INTEGER}, #{member,jdbcType=INTEGER}, 
      #{position,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.newcode.climb.po.Club_member" >
    insert into club_member
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="cid != null" >
        cid,
      </if>
      <if test="member != null" >
        member,
      </if>
      <if test="position != null" >
        position,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cid != null" >
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="member != null" >
        #{member,jdbcType=INTEGER},
      </if>
      <if test="position != null" >
        #{position,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.newcode.climb.po.Club_member" >
    update club_member
    <set >
      <if test="cid != null" >
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="member != null" >
        member = #{member,jdbcType=INTEGER},
      </if>
      <if test="position != null" >
        position = #{position,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.newcode.climb.po.Club_member" >
    update club_member
    set cid = #{cid,jdbcType=INTEGER},
      member = #{member,jdbcType=INTEGER},
      position = #{position,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--SELECT  club_member.position, user_inf.nickName username,user_inf.head_img headImg,user.id,user_inf.gender
    From club_member ,`user`,user_inf
    WHERE club_member.member = user.id
    AND user.id = user_inf.uid
    AND club_member.cid = #{cid}
    <if test="name != null">
      AND  (user_inf.nickName LIKE  concat(concat('%',#{name}),'%') OR user.username LIKE  concat(concat('%',#{name}),'%'))
    </if>
    LIMIT #{startPos},#{pageSize}-->
  <select id="selectMember" parameterType="java.lang.Integer" resultType="cn.newcode.climb.vo.ClubMemberVo">
    SELECT  club_member.position, user_inf.nickName username,user_inf.head_img headImg,user.id,user_inf.gender,x.attention attention
    FROM club_member ,`user`,(user_inf LEFT JOIN  (SELECT user_fans.`attention` attention FROM user_fans,club_member ,(SELECT cid FROM club_member WHERE member = #{uid}) c WHERE user_fans.uid = #{uid} AND user_fans.attention IS NOT  NULL AND club_member.cid = c.cid AND user_fans.`attention` = club_member.`member`
    ) x ON user_inf.`uid` = x.attention)
    WHERE club_member.member = user.id
    AND user.id = user_inf.uid
    AND club_member.cid = #{cid}
    <if test="name != null">
      AND  (user_inf.nickName LIKE  concat(concat('%',#{name}),'%') OR user.username LIKE  concat(concat('%',#{name}),'%'))
    </if>
    LIMIT #{startPos},#{pageSize}
  </select>
  <select id="selectCount" resultType="java.lang.Integer">
    SELECT  COUNT(*)
    From club_member ,`user`,user_inf
    WHERE club_member.member = user.id
    AND user.id = user_inf.uid
    AND club_member.cid = #{cid}
    <if test="name != null">
      AND  (user_inf.nickName LIKE  concat(concat('%',#{name}),'%') OR user.username LIKE  concat(concat('%',#{name}),'%'))
    </if>
  </select>
  <select id="selectClub" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    SELECT cid FROM  club_member WHERE  member = #{id}
  </select>
  <delete id="quiteClub" parameterType="java.lang.Integer">
    DELETE FROM  club_member WHERE member = #{uid};
  </delete>
  <select id="selectBelong" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    SELECT cid FROM club_member WHERE member = #{uid}
  </select>
  <select id="selectClubMember" parameterType="java.lang.Integer" resultType="cn.newcode.climb.po.Club_member">
    SELECT * FROM club_member WHERE cid = #{cid}
  </select>
  <update id="setJob" parameterType="cn.newcode.climb.po.Club_member">
    UPDATE club_member SET `position`=#{position} WHERE member = #{member} AND cid = #{cid}
  </update>
</mapper>
